@using Microsoft.Web.Mvc
@using UIT.iDeal.Common.Web
@using UIT.iDeal.ViewModel.Users
@using UIT.iDeal.Web.Controllers
@using UIT.iDeal.Common.Extensions.Web
@using MvcContrib
@model AddUserForm

@{
    ViewBag.Title = LocalSiteMap.PageText.PageTitles.Users.Create;
}

@section PageIdentifier
{
   @Html.SetUpPageIdWith(LocalSiteMap.Navigation.PageIds.Users.Create)
}

@section JavaScriptReference
{
    <script src="@Url.Content("~/Scripts/jquery.ui.multiselect.js")" type="text/javascript"></script>   
    <script src="@Url.Content("~/Scripts/jquery.custom.extensions.js")" type="text/javascript"></script>   
}
@using (Html.BeginForm("Create", "User", FormMethod.Post, new { @class = "form-horizontal well" }))
{
    
   @Html.ValidationSummary(true)
    <fieldset id="@LocalSiteMap.Locators.PanelIds.AddUser.Fieldset">
        <legend>Create a new User</legend>
            @Html.EditorFor(x => x.Firstname)
            @Html.EditorFor(x => x.Lastname)
            @Html.EditorFor(x => x.Username)
            @Html.EditorFor(x => x.Email)
        
        <div class="controls-row">
            <div class="pull-left">
                @Html.MultiSelectWithCheckboxes(m => m.ApplicationRoles, m => m.ApplicationRoleIds)
            </div>
            <div class="pull-left">
                @Html.MultiSelectWithCheckboxes(m => m.BusinessUnits, m => m.BusinessUnitIds)
            </div>
        </div>
        <hr/>
        
            @{ var modulePermission = new ApplicationPermissionViewModel(); }
            
            <table id="@LocalSiteMap.Locators.Grids.ApplicationPermissions">
                <thead>
                    <tr>
                        @(modulePermission.HeaderColumnFor(x => x.ApplicationRoles))
                        @(modulePermission.HeaderColumnFor(x => x.Description))
                        @(modulePermission.HeaderColumnFor(x => x.IsAuthorised,false))
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        
         <hr/>
        <div>
            <input type="submit" class="btn btn-primary" id="@LocalSiteMap.Locators.ActionElementIds.AddUser.AddUserButton" value="Create" />
            @(Html.ActionLink<UserController>(x => x.Index(), "Back to Users list"))
        </div>
    </fieldset>
}



@section JavaScript
{
    <script type="text/javascript">
        $(function () {
            $(".multiselect").multiselect();

            var applicationPermissions,
                isAuthorisedForRolesIn = function (permission) {

                    var selectedApplicationIds =
                            $("#@(Html.IdFor(x => x.ApplicationRoles)) :checkbox:checked")
                                .map(function () { return $(this).val(); }),
                        applicationIdsForModule =
                            permission.ApplicationRoles
                                .map(function (applicationRole) { return applicationRole.Id; });

                    return $(selectedApplicationIds).containValues(applicationIdsForModule);
                },
                applyPermissionsForSelectedRoles = function () {

                    $.each(applicationPermissions, function (index, permission) {
                        $("#@LocalSiteMap.Locators.Grids.ApplicationPermissions tbody tr:eq(" + index + ") :checkbox")
                            .prop("checked", isAuthorisedForRolesIn(permission));
                    });
                };


            $("#@(Html.NameFor(x => x.ApplicationRoles))")
                .find("input:checkbox")
                .click(applyPermissionsForSelectedRoles);

            var concatApplicationRoles = function (applicationRolesForModule) {

                var applicationCodes = "", applicationDescriptions = "";

                $.each(applicationRolesForModule, function (index, applicationRole) {
                    applicationCodes += applicationRole.Code;
                    applicationDescriptions += applicationRole.Description;

                    if (index < applicationRolesForModule.length - 2) {
                        applicationCodes += ", ";
                        applicationDescriptions += ", ";
                    } else if (index < applicationRolesForModule.length - 1) {
                        applicationCodes += " and ";
                        applicationDescriptions += " and ";
                    }
                });

                return {
                    Codes: applicationCodes,
                    Descriptions: applicationDescriptions
                };
            };

            var rowTemplate =
                    $("#@LocalSiteMap.Locators.Grids.ApplicationPermissions thead tr").clone().outerHtml().replace(/th\b/g, "td");

            $.ajax({
                url: "@(Url.Action<UserController>(x => x.GetAllModulePermissions()))",
                type: "POST",
                success: function (data) {
                    applicationPermissions = data;
                    
                    $.each(applicationPermissions, function (index, permission) {
                        var newRow =
                            $(rowTemplate)
                                .find("td[data-property-name]")
                                .each(function () {

                                    var cell = $(this);
                                    var propertyName = cell.attr("data-property-name"),
                                        content = permission[propertyName];

                                    if ($.isArray(content)) {
                                        role = concatApplicationRoles(content);
                                        content = role.Descriptions;
                                        $(cell).parent().attr("title", "Respectives code: " + role.Codes);
                                    } else if (typeof content == "boolean") {

                                        content = "<input type='checkbox' disabled";
                                        if (isAuthorisedForRolesIn(permission)) content += " checked";
                                        content += "/>";
                                    }

                                    cell.html(content);
                                })
                                .end();

                        $("#@LocalSiteMap.Locators.Grids.ApplicationPermissions tbody").append(newRow);

                    });
                    

                }
            });
        });
       
    </script>
}
